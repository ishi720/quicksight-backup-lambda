name: Deploy CloudFormation

on:
  workflow_dispatch:

jobs:
  deploy-s3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Deploy S3 bucket via CloudFormation
        run: |
          aws cloudformation deploy \
            --template-file templates/s3-bucket.yaml \
            --stack-name quicksight-backup-s3-stack \
            --parameter-overrides BackupBucketName=${{ secrets.BACKUP_BUCKET_NAME }}

  deploy-iam:
    runs-on: ubuntu-latest
    needs: deploy-s3
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Deploy IAM role and policy via CloudFormation
      run: |
        aws cloudformation deploy \
          --template-file templates/iam-role-policy.yaml \
          --stack-name quicksight-backup-role-stack \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides BackupBucketName=${{ secrets.BACKUP_BUCKET_NAME }}

  deploy-lambda:
    runs-on: ubuntu-latest
    needs: deploy-iam
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Get Lambda Role ARN from IAM stack
        id: get-role-arn
        run: |
          ROLE_ARN=$(aws cloudformation describe-stacks --stack-name quicksight-backup-role-stack \
            --query "Stacks[0].Outputs[?OutputKey=='LambdaRoleArn'].OutputValue" --output text)
          echo "ROLE_ARN=$ROLE_ARN" >> $GITHUB_ENV

      - name: Deploy Lambda via CloudFormation
        run: |
          aws cloudformation deploy \
            --template-file templates/lambda-function.yaml \
            --stack-name quicksight-backup-function-stack \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides LambdaExecutionRoleArn=$ROLE_ARN

  deploy-lambda-function:
    runs-on: ubuntu-latest
    needs: deploy-lambda

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

    - name: Create deployment package
      run: |
        cd lambda
        zip -r ../function.zip .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Deploy Lambda code
      run: |
        aws lambda update-function-code \
          --function-name quicksight-backup \
          --zip-file fileb://function.zip

    - name: Wait for function update to complete
      run: |
        echo "Waiting for Lambda update to finish..."
        sleep 10

    - name: Update Lambda handler (optional if unchanged)
      run: |
        aws lambda update-function-configuration \
          --function-name quicksight-backup \
          --handler quicksight_backup.main.lambda_handler

  deploy-eventbridge:
    runs-on: ubuntu-latest
    needs: deploy-lambda-function
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Deploy EventBridge rule via CloudFormation
        run: |
          aws cloudformation deploy \
            --template-file templates/eventbridge-schedule.yaml \
            --stack-name quicksight-backup-eventbridge-stack \
            --capabilities CAPABILITY_NAMED_IAM
